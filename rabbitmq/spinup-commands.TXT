docker network create rabbits
docker run -d --rm --net rabbits --hostname rabbit-1 --name rabbit-1 rabbitmq:3.8 

# how to grab existing erlang cookie (for athentication)
docker exec -it rabbit-1 cat /var/lib/rabbitmq/.erlang.cookie


docker run -d --rm --net rabbits -v ./rabbitmq/rabbit-1/:/config/  -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=COOKIEHERE  --hostname rabbit-1 --name rabbit-1  -p 8081:15672 rabbitmq:3.8-management

docker run -d --rm --net rabbits -v ./rabbitmq/rabbit-2/:/config/  -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=COOKIEHERE  --hostname rabbit-2 --name rabbit-2  -p 8082:15672 rabbitmq:3.8-management

docker run -d --rm --net rabbits -v ./rabbitmq/rabbit-3/:/config/  -e RABBITMQ_CONFIG_FILE=/config/rabbitmq -e RABBITMQ_ERLANG_COOKIE=COOKIEHERE  --hostname rabbit-3 --name rabbit-3  -p 8083:15672 rabbitmq:3.8-management

# enable federation plugin
docker exec -it rabbit-1 rabbitmq-plugins enable rabbitmq_federation 
docker exec -it rabbit-2 rabbitmq-plugins enable rabbitmq_federation
docker exec -it rabbit-3 rabbitmq-plugins enable rabbitmq_federation


#QUEUE MIRRORING
docker exec -it rabbit-1 bash

rabbitmqctl set_policy ha-fed \
    ".*" '{"federation-upstream-set":"all", "ha-mode":"nodes", "ha-params":["rabbit@rabbit-1","rabbit@rabbit-2","rabbit@rabbit-3"]}' \
    --priority 1 \
    --apply-to queues

rabbitmqctl set_policy ha-fed \
    ".*" '{"federation-upstream-set":"all", "ha-sync-mode":"automatic", "ha-mode":"nodes", "ha-params":["rabbit@rabbit-1","rabbit@rabbit-2","rabbit@rabbit-3"]}' \
    --priority 1 \
    --apply-to queues